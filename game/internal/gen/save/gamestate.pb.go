// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: save/gamestate.proto

package save

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameState represents the complete game state for saving
type GameState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	SaveTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	Player        *PlayerData            `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Market        *MarketData            `protobuf:"bytes,4,opt,name=market,proto3" json:"market,omitempty"`
	Inventory     *InventoryData         `protobuf:"bytes,5,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Merchants     []*MerchantData        `protobuf:"bytes,6,rep,name=merchants,proto3" json:"merchants,omitempty"`
	Events        *EventData             `protobuf:"bytes,7,opt,name=events,proto3" json:"events,omitempty"`
	Progress      *ProgressData          `protobuf:"bytes,8,opt,name=progress,proto3" json:"progress,omitempty"`
	Banking       *BankingData           `protobuf:"bytes,9,opt,name=banking,proto3" json:"banking,omitempty"`
	Summaries     *SummaryData           `protobuf:"bytes,10,opt,name=summaries,proto3" json:"summaries,omitempty"`
	Settings      *SettingsData          `protobuf:"bytes,11,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_save_gamestate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{0}
}

func (x *GameState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GameState) GetSaveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SaveTime
	}
	return nil
}

func (x *GameState) GetPlayer() *PlayerData {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *GameState) GetMarket() *MarketData {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *GameState) GetInventory() *InventoryData {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *GameState) GetMerchants() []*MerchantData {
	if x != nil {
		return x.Merchants
	}
	return nil
}

func (x *GameState) GetEvents() *EventData {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GameState) GetProgress() *ProgressData {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GameState) GetBanking() *BankingData {
	if x != nil {
		return x.Banking
	}
	return nil
}

func (x *GameState) GetSummaries() *SummaryData {
	if x != nil {
		return x.Summaries
	}
	return nil
}

func (x *GameState) GetSettings() *SettingsData {
	if x != nil {
		return x.Settings
	}
	return nil
}

// PlayerData contains all player-related state
type PlayerData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gold                 float64                `protobuf:"fixed64,3,opt,name=gold,proto3" json:"gold,omitempty"`
	Reputation           int32                  `protobuf:"varint,4,opt,name=reputation,proto3" json:"reputation,omitempty"`
	Rank                 string                 `protobuf:"bytes,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Experience           int32                  `protobuf:"varint,6,opt,name=experience,proto3" json:"experience,omitempty"`
	DayNumber            int32                  `protobuf:"varint,7,opt,name=day_number,json=dayNumber,proto3" json:"day_number,omitempty"`
	CurrentSeason        string                 `protobuf:"bytes,8,opt,name=current_season,json=currentSeason,proto3" json:"current_season,omitempty"`
	Year                 int32                  `protobuf:"varint,9,opt,name=year,proto3" json:"year,omitempty"`
	ShopCapacity         int32                  `protobuf:"varint,10,opt,name=shop_capacity,json=shopCapacity,proto3" json:"shop_capacity,omitempty"`
	WarehouseCapacity    int32                  `protobuf:"varint,11,opt,name=warehouse_capacity,json=warehouseCapacity,proto3" json:"warehouse_capacity,omitempty"`
	LastPlayed           *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_played,json=lastPlayed,proto3" json:"last_played,omitempty"`
	TotalPlayTimeSeconds int32                  `protobuf:"varint,13,opt,name=total_play_time_seconds,json=totalPlayTimeSeconds,proto3" json:"total_play_time_seconds,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	mi := &file_save_gamestate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerData) GetGold() float64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *PlayerData) GetReputation() int32 {
	if x != nil {
		return x.Reputation
	}
	return 0
}

func (x *PlayerData) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *PlayerData) GetExperience() int32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *PlayerData) GetDayNumber() int32 {
	if x != nil {
		return x.DayNumber
	}
	return 0
}

func (x *PlayerData) GetCurrentSeason() string {
	if x != nil {
		return x.CurrentSeason
	}
	return ""
}

func (x *PlayerData) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *PlayerData) GetShopCapacity() int32 {
	if x != nil {
		return x.ShopCapacity
	}
	return 0
}

func (x *PlayerData) GetWarehouseCapacity() int32 {
	if x != nil {
		return x.WarehouseCapacity
	}
	return 0
}

func (x *PlayerData) GetLastPlayed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPlayed
	}
	return nil
}

func (x *PlayerData) GetTotalPlayTimeSeconds() int32 {
	if x != nil {
		return x.TotalPlayTimeSeconds
	}
	return 0
}

// MarketData contains market state
type MarketData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []*ItemPrice           `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
	History       []*PriceHistory        `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	CurrentTrend  string                 `protobuf:"bytes,3,opt,name=current_trend,json=currentTrend,proto3" json:"current_trend,omitempty"`
	Volatility    float64                `protobuf:"fixed64,4,opt,name=volatility,proto3" json:"volatility,omitempty"`
	ActiveEvents  []*MarketEvent         `protobuf:"bytes,5,rep,name=active_events,json=activeEvents,proto3" json:"active_events,omitempty"`
	DemandLevels  map[string]float64     `protobuf:"bytes,6,rep,name=demand_levels,json=demandLevels,proto3" json:"demand_levels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	SupplyLevels  map[string]float64     `protobuf:"bytes,7,rep,name=supply_levels,json=supplyLevels,proto3" json:"supply_levels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketData) Reset() {
	*x = MarketData{}
	mi := &file_save_gamestate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketData) ProtoMessage() {}

func (x *MarketData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketData.ProtoReflect.Descriptor instead.
func (*MarketData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{2}
}

func (x *MarketData) GetPrices() []*ItemPrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *MarketData) GetHistory() []*PriceHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *MarketData) GetCurrentTrend() string {
	if x != nil {
		return x.CurrentTrend
	}
	return ""
}

func (x *MarketData) GetVolatility() float64 {
	if x != nil {
		return x.Volatility
	}
	return 0
}

func (x *MarketData) GetActiveEvents() []*MarketEvent {
	if x != nil {
		return x.ActiveEvents
	}
	return nil
}

func (x *MarketData) GetDemandLevels() map[string]float64 {
	if x != nil {
		return x.DemandLevels
	}
	return nil
}

func (x *MarketData) GetSupplyLevels() map[string]float64 {
	if x != nil {
		return x.SupplyLevels
	}
	return nil
}

// ItemPrice represents the current price of an item
type ItemPrice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName      string                 `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	BasePrice     float64                `protobuf:"fixed64,3,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	CurrentPrice  float64                `protobuf:"fixed64,4,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	PreviousPrice float64                `protobuf:"fixed64,5,opt,name=previous_price,json=previousPrice,proto3" json:"previous_price,omitempty"`
	Category      string                 `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemPrice) Reset() {
	*x = ItemPrice{}
	mi := &file_save_gamestate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPrice) ProtoMessage() {}

func (x *ItemPrice) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPrice.ProtoReflect.Descriptor instead.
func (*ItemPrice) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{3}
}

func (x *ItemPrice) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemPrice) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *ItemPrice) GetBasePrice() float64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *ItemPrice) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *ItemPrice) GetPreviousPrice() float64 {
	if x != nil {
		return x.PreviousPrice
	}
	return 0
}

func (x *ItemPrice) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ItemPrice) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// PriceHistory represents historical price data
type PriceHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	History       []*PricePoint          `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceHistory) Reset() {
	*x = PriceHistory{}
	mi := &file_save_gamestate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceHistory) ProtoMessage() {}

func (x *PriceHistory) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceHistory.ProtoReflect.Descriptor instead.
func (*PriceHistory) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{4}
}

func (x *PriceHistory) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *PriceHistory) GetHistory() []*PricePoint {
	if x != nil {
		return x.History
	}
	return nil
}

// PricePoint is a single price data point
type PricePoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Price         float64                `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Volume        int32                  `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PricePoint) Reset() {
	*x = PricePoint{}
	mi := &file_save_gamestate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PricePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricePoint) ProtoMessage() {}

func (x *PricePoint) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricePoint.ProtoReflect.Descriptor instead.
func (*PricePoint) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{5}
}

func (x *PricePoint) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *PricePoint) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PricePoint) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// MarketEvent represents an active market event
type MarketEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PriceModifier float64                `protobuf:"fixed64,4,opt,name=price_modifier,json=priceModifier,proto3" json:"price_modifier,omitempty"`
	DurationDays  int32                  `protobuf:"varint,5,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
	DaysRemaining int32                  `protobuf:"varint,6,opt,name=days_remaining,json=daysRemaining,proto3" json:"days_remaining,omitempty"`
	AffectedItems []string               `protobuf:"bytes,7,rep,name=affected_items,json=affectedItems,proto3" json:"affected_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketEvent) Reset() {
	*x = MarketEvent{}
	mi := &file_save_gamestate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketEvent) ProtoMessage() {}

func (x *MarketEvent) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketEvent.ProtoReflect.Descriptor instead.
func (*MarketEvent) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{6}
}

func (x *MarketEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *MarketEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *MarketEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarketEvent) GetPriceModifier() float64 {
	if x != nil {
		return x.PriceModifier
	}
	return 0
}

func (x *MarketEvent) GetDurationDays() int32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *MarketEvent) GetDaysRemaining() int32 {
	if x != nil {
		return x.DaysRemaining
	}
	return 0
}

func (x *MarketEvent) GetAffectedItems() []string {
	if x != nil {
		return x.AffectedItems
	}
	return nil
}

// InventoryData contains all inventory information
type InventoryData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ShopItems           []*InventoryItem       `protobuf:"bytes,1,rep,name=shop_items,json=shopItems,proto3" json:"shop_items,omitempty"`
	WarehouseItems      []*InventoryItem       `protobuf:"bytes,2,rep,name=warehouse_items,json=warehouseItems,proto3" json:"warehouse_items,omitempty"`
	TotalShopItems      int32                  `protobuf:"varint,3,opt,name=total_shop_items,json=totalShopItems,proto3" json:"total_shop_items,omitempty"`
	TotalWarehouseItems int32                  `protobuf:"varint,4,opt,name=total_warehouse_items,json=totalWarehouseItems,proto3" json:"total_warehouse_items,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InventoryData) Reset() {
	*x = InventoryData{}
	mi := &file_save_gamestate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryData) ProtoMessage() {}

func (x *InventoryData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryData.ProtoReflect.Descriptor instead.
func (*InventoryData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryData) GetShopItems() []*InventoryItem {
	if x != nil {
		return x.ShopItems
	}
	return nil
}

func (x *InventoryData) GetWarehouseItems() []*InventoryItem {
	if x != nil {
		return x.WarehouseItems
	}
	return nil
}

func (x *InventoryData) GetTotalShopItems() int32 {
	if x != nil {
		return x.TotalShopItems
	}
	return 0
}

func (x *InventoryData) GetTotalWarehouseItems() int32 {
	if x != nil {
		return x.TotalWarehouseItems
	}
	return 0
}

// InventoryItem represents a single inventory item
type InventoryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName      string                 `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PurchasePrice float64                `protobuf:"fixed64,5,opt,name=purchase_price,json=purchasePrice,proto3" json:"purchase_price,omitempty"`
	CurrentValue  float64                `protobuf:"fixed64,6,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	DaysHeld      int32                  `protobuf:"varint,7,opt,name=days_held,json=daysHeld,proto3" json:"days_held,omitempty"`
	Durability    int32                  `protobuf:"varint,8,opt,name=durability,proto3" json:"durability,omitempty"`
	MaxDurability int32                  `protobuf:"varint,9,opt,name=max_durability,json=maxDurability,proto3" json:"max_durability,omitempty"`
	IsSpoiled     bool                   `protobuf:"varint,10,opt,name=is_spoiled,json=isSpoiled,proto3" json:"is_spoiled,omitempty"`
	PurchaseDate  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	mi := &file_save_gamestate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{8}
}

func (x *InventoryItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InventoryItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *InventoryItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *InventoryItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InventoryItem) GetPurchasePrice() float64 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *InventoryItem) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *InventoryItem) GetDaysHeld() int32 {
	if x != nil {
		return x.DaysHeld
	}
	return 0
}

func (x *InventoryItem) GetDurability() int32 {
	if x != nil {
		return x.Durability
	}
	return 0
}

func (x *InventoryItem) GetMaxDurability() int32 {
	if x != nil {
		return x.MaxDurability
	}
	return 0
}

func (x *InventoryItem) GetIsSpoiled() bool {
	if x != nil {
		return x.IsSpoiled
	}
	return false
}

func (x *InventoryItem) GetPurchaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PurchaseDate
	}
	return nil
}

// MerchantData represents an AI merchant's state
type MerchantData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Personality      string                 `protobuf:"bytes,3,opt,name=personality,proto3" json:"personality,omitempty"`
	Gold             float64                `protobuf:"fixed64,4,opt,name=gold,proto3" json:"gold,omitempty"`
	Reputation       int32                  `protobuf:"varint,5,opt,name=reputation,proto3" json:"reputation,omitempty"`
	Inventory        []*InventoryItem       `protobuf:"bytes,6,rep,name=inventory,proto3" json:"inventory,omitempty"`
	TradingStrategy  string                 `protobuf:"bytes,7,opt,name=trading_strategy,json=tradingStrategy,proto3" json:"trading_strategy,omitempty"`
	RiskTolerance    float64                `protobuf:"fixed64,8,opt,name=risk_tolerance,json=riskTolerance,proto3" json:"risk_tolerance,omitempty"`
	SuccessfulTrades int32                  `protobuf:"varint,9,opt,name=successful_trades,json=successfulTrades,proto3" json:"successful_trades,omitempty"`
	TotalTrades      int32                  `protobuf:"varint,10,opt,name=total_trades,json=totalTrades,proto3" json:"total_trades,omitempty"`
	TotalProfit      float64                `protobuf:"fixed64,11,opt,name=total_profit,json=totalProfit,proto3" json:"total_profit,omitempty"`
	KnownInformation []string               `protobuf:"bytes,12,rep,name=known_information,json=knownInformation,proto3" json:"known_information,omitempty"`
	ItemPreferences  map[string]float64     `protobuf:"bytes,13,rep,name=item_preferences,json=itemPreferences,proto3" json:"item_preferences,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MerchantData) Reset() {
	*x = MerchantData{}
	mi := &file_save_gamestate_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantData) ProtoMessage() {}

func (x *MerchantData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantData.ProtoReflect.Descriptor instead.
func (*MerchantData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{9}
}

func (x *MerchantData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MerchantData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantData) GetPersonality() string {
	if x != nil {
		return x.Personality
	}
	return ""
}

func (x *MerchantData) GetGold() float64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *MerchantData) GetReputation() int32 {
	if x != nil {
		return x.Reputation
	}
	return 0
}

func (x *MerchantData) GetInventory() []*InventoryItem {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *MerchantData) GetTradingStrategy() string {
	if x != nil {
		return x.TradingStrategy
	}
	return ""
}

func (x *MerchantData) GetRiskTolerance() float64 {
	if x != nil {
		return x.RiskTolerance
	}
	return 0
}

func (x *MerchantData) GetSuccessfulTrades() int32 {
	if x != nil {
		return x.SuccessfulTrades
	}
	return 0
}

func (x *MerchantData) GetTotalTrades() int32 {
	if x != nil {
		return x.TotalTrades
	}
	return 0
}

func (x *MerchantData) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *MerchantData) GetKnownInformation() []string {
	if x != nil {
		return x.KnownInformation
	}
	return nil
}

func (x *MerchantData) GetItemPreferences() map[string]float64 {
	if x != nil {
		return x.ItemPreferences
	}
	return nil
}

// EventData contains event system state
type EventData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ScheduledEvents []*ScheduledEvent      `protobuf:"bytes,1,rep,name=scheduled_events,json=scheduledEvents,proto3" json:"scheduled_events,omitempty"`
	CompletedEvents []*CompletedEvent      `protobuf:"bytes,2,rep,name=completed_events,json=completedEvents,proto3" json:"completed_events,omitempty"`
	NextEventId     string                 `protobuf:"bytes,3,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	NextEventDays   int32                  `protobuf:"varint,4,opt,name=next_event_days,json=nextEventDays,proto3" json:"next_event_days,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_save_gamestate_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{10}
}

func (x *EventData) GetScheduledEvents() []*ScheduledEvent {
	if x != nil {
		return x.ScheduledEvents
	}
	return nil
}

func (x *EventData) GetCompletedEvents() []*CompletedEvent {
	if x != nil {
		return x.CompletedEvents
	}
	return nil
}

func (x *EventData) GetNextEventId() string {
	if x != nil {
		return x.NextEventId
	}
	return ""
}

func (x *EventData) GetNextEventDays() int32 {
	if x != nil {
		return x.NextEventDays
	}
	return 0
}

// ScheduledEvent represents a scheduled future event
type ScheduledEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	TriggerDay    int32                  `protobuf:"varint,3,opt,name=trigger_day,json=triggerDay,proto3" json:"trigger_day,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledEvent) Reset() {
	*x = ScheduledEvent{}
	mi := &file_save_gamestate_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledEvent) ProtoMessage() {}

func (x *ScheduledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledEvent.ProtoReflect.Descriptor instead.
func (*ScheduledEvent) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{11}
}

func (x *ScheduledEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ScheduledEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ScheduledEvent) GetTriggerDay() int32 {
	if x != nil {
		return x.TriggerDay
	}
	return 0
}

func (x *ScheduledEvent) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// CompletedEvent represents a completed event
type CompletedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CompletedTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=completed_time,json=completedTime,proto3" json:"completed_time,omitempty"`
	WasSuccessful bool                   `protobuf:"varint,3,opt,name=was_successful,json=wasSuccessful,proto3" json:"was_successful,omitempty"`
	Impact        float64                `protobuf:"fixed64,4,opt,name=impact,proto3" json:"impact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedEvent) Reset() {
	*x = CompletedEvent{}
	mi := &file_save_gamestate_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedEvent) ProtoMessage() {}

func (x *CompletedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedEvent.ProtoReflect.Descriptor instead.
func (*CompletedEvent) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{12}
}

func (x *CompletedEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CompletedEvent) GetCompletedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedTime
	}
	return nil
}

func (x *CompletedEvent) GetWasSuccessful() bool {
	if x != nil {
		return x.WasSuccessful
	}
	return false
}

func (x *CompletedEvent) GetImpact() float64 {
	if x != nil {
		return x.Impact
	}
	return 0
}

// ProgressData contains player progression state
type ProgressData struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Achievements           []*Achievement         `protobuf:"bytes,1,rep,name=achievements,proto3" json:"achievements,omitempty"`
	UnlockedFeatures       []*UnlockedFeature     `protobuf:"bytes,2,rep,name=unlocked_features,json=unlockedFeatures,proto3" json:"unlocked_features,omitempty"`
	Statistics             map[string]int32       `protobuf:"bytes,3,rep,name=statistics,proto3" json:"statistics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Quests                 []*QuestProgress       `protobuf:"bytes,4,rep,name=quests,proto3" json:"quests,omitempty"`
	TotalAchievementPoints int32                  `protobuf:"varint,5,opt,name=total_achievement_points,json=totalAchievementPoints,proto3" json:"total_achievement_points,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProgressData) Reset() {
	*x = ProgressData{}
	mi := &file_save_gamestate_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressData) ProtoMessage() {}

func (x *ProgressData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressData.ProtoReflect.Descriptor instead.
func (*ProgressData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{13}
}

func (x *ProgressData) GetAchievements() []*Achievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *ProgressData) GetUnlockedFeatures() []*UnlockedFeature {
	if x != nil {
		return x.UnlockedFeatures
	}
	return nil
}

func (x *ProgressData) GetStatistics() map[string]int32 {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *ProgressData) GetQuests() []*QuestProgress {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *ProgressData) GetTotalAchievementPoints() int32 {
	if x != nil {
		return x.TotalAchievementPoints
	}
	return 0
}

// Achievement represents an earned achievement
type Achievement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Points        int32                  `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	EarnedTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=earned_time,json=earnedTime,proto3" json:"earned_time,omitempty"`
	Progress      float64                `protobuf:"fixed64,6,opt,name=progress,proto3" json:"progress,omitempty"`
	IsComplete    bool                   `protobuf:"varint,7,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	mi := &file_save_gamestate_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{14}
}

func (x *Achievement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Achievement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Achievement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Achievement) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Achievement) GetEarnedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EarnedTime
	}
	return nil
}

func (x *Achievement) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Achievement) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

// UnlockedFeature represents an unlocked game feature
type UnlockedFeature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeatureId     string                 `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	FeatureName   string                 `protobuf:"bytes,2,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	UnlockTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=unlock_time,json=unlockTime,proto3" json:"unlock_time,omitempty"`
	UnlockReason  string                 `protobuf:"bytes,4,opt,name=unlock_reason,json=unlockReason,proto3" json:"unlock_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockedFeature) Reset() {
	*x = UnlockedFeature{}
	mi := &file_save_gamestate_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockedFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockedFeature) ProtoMessage() {}

func (x *UnlockedFeature) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockedFeature.ProtoReflect.Descriptor instead.
func (*UnlockedFeature) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{15}
}

func (x *UnlockedFeature) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *UnlockedFeature) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

func (x *UnlockedFeature) GetUnlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UnlockTime
	}
	return nil
}

func (x *UnlockedFeature) GetUnlockReason() string {
	if x != nil {
		return x.UnlockReason
	}
	return ""
}

// QuestProgress represents progress on a quest
type QuestProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestId       string                 `protobuf:"bytes,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	QuestName     string                 `protobuf:"bytes,2,opt,name=quest_name,json=questName,proto3" json:"quest_name,omitempty"`
	CurrentStep   int32                  `protobuf:"varint,3,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	TotalSteps    int32                  `protobuf:"varint,4,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
	QuestData     map[string]string      `protobuf:"bytes,5,rep,name=quest_data,json=questData,proto3" json:"quest_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsComplete    bool                   `protobuf:"varint,6,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestProgress) Reset() {
	*x = QuestProgress{}
	mi := &file_save_gamestate_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestProgress) ProtoMessage() {}

func (x *QuestProgress) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestProgress.ProtoReflect.Descriptor instead.
func (*QuestProgress) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{16}
}

func (x *QuestProgress) GetQuestId() string {
	if x != nil {
		return x.QuestId
	}
	return ""
}

func (x *QuestProgress) GetQuestName() string {
	if x != nil {
		return x.QuestName
	}
	return ""
}

func (x *QuestProgress) GetCurrentStep() int32 {
	if x != nil {
		return x.CurrentStep
	}
	return 0
}

func (x *QuestProgress) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

func (x *QuestProgress) GetQuestData() map[string]string {
	if x != nil {
		return x.QuestData
	}
	return nil
}

func (x *QuestProgress) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

// BankingData contains all banking system state
type BankingData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Accounts            []*BankAccount         `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Investments         []*Investment          `protobuf:"bytes,2,rep,name=investments,proto3" json:"investments,omitempty"`
	Loans               []*Loan                `protobuf:"bytes,3,rep,name=loans,proto3" json:"loans,omitempty"`
	Transactions        []*Transaction         `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalInterestEarned float64                `protobuf:"fixed64,5,opt,name=total_interest_earned,json=totalInterestEarned,proto3" json:"total_interest_earned,omitempty"`
	TotalFeesPaid       float64                `protobuf:"fixed64,6,opt,name=total_fees_paid,json=totalFeesPaid,proto3" json:"total_fees_paid,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BankingData) Reset() {
	*x = BankingData{}
	mi := &file_save_gamestate_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankingData) ProtoMessage() {}

func (x *BankingData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankingData.ProtoReflect.Descriptor instead.
func (*BankingData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{17}
}

func (x *BankingData) GetAccounts() []*BankAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *BankingData) GetInvestments() []*Investment {
	if x != nil {
		return x.Investments
	}
	return nil
}

func (x *BankingData) GetLoans() []*Loan {
	if x != nil {
		return x.Loans
	}
	return nil
}

func (x *BankingData) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *BankingData) GetTotalInterestEarned() float64 {
	if x != nil {
		return x.TotalInterestEarned
	}
	return 0
}

func (x *BankingData) GetTotalFeesPaid() float64 {
	if x != nil {
		return x.TotalFeesPaid
	}
	return 0
}

// BankAccount represents a bank account
type BankAccount struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AccountId        string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType      string                 `protobuf:"bytes,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Balance          float64                `protobuf:"fixed64,3,opt,name=balance,proto3" json:"balance,omitempty"`
	InterestRate     float64                `protobuf:"fixed64,4,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	OpenedDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=opened_date,json=openedDate,proto3" json:"opened_date,omitempty"`
	LastInterestDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_interest_date,json=lastInterestDate,proto3" json:"last_interest_date,omitempty"`
	IsActive         bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BankAccount) Reset() {
	*x = BankAccount{}
	mi := &file_save_gamestate_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccount) ProtoMessage() {}

func (x *BankAccount) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccount.ProtoReflect.Descriptor instead.
func (*BankAccount) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{18}
}

func (x *BankAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *BankAccount) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *BankAccount) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *BankAccount) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *BankAccount) GetOpenedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedDate
	}
	return nil
}

func (x *BankAccount) GetLastInterestDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastInterestDate
	}
	return nil
}

func (x *BankAccount) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// Investment represents an investment
type Investment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvestmentId  string                 `protobuf:"bytes,1,opt,name=investment_id,json=investmentId,proto3" json:"investment_id,omitempty"`
	AccountId     string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OptionId      string                 `protobuf:"bytes,3,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	Principal     float64                `protobuf:"fixed64,4,opt,name=principal,proto3" json:"principal,omitempty"`
	CurrentValue  float64                `protobuf:"fixed64,5,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	MaturityDate  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ActualReturn  float64                `protobuf:"fixed64,9,opt,name=actual_return,json=actualReturn,proto3" json:"actual_return,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Investment) Reset() {
	*x = Investment{}
	mi := &file_save_gamestate_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Investment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Investment) ProtoMessage() {}

func (x *Investment) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Investment.ProtoReflect.Descriptor instead.
func (*Investment) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{19}
}

func (x *Investment) GetInvestmentId() string {
	if x != nil {
		return x.InvestmentId
	}
	return ""
}

func (x *Investment) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Investment) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *Investment) GetPrincipal() float64 {
	if x != nil {
		return x.Principal
	}
	return 0
}

func (x *Investment) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *Investment) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Investment) GetMaturityDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MaturityDate
	}
	return nil
}

func (x *Investment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Investment) GetActualReturn() float64 {
	if x != nil {
		return x.ActualReturn
	}
	return 0
}

// Loan represents a loan
type Loan struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LoanId         string                 `protobuf:"bytes,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
	AccountId      string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	OriginalAmount float64                `protobuf:"fixed64,3,opt,name=original_amount,json=originalAmount,proto3" json:"original_amount,omitempty"`
	CurrentAmount  float64                `protobuf:"fixed64,4,opt,name=current_amount,json=currentAmount,proto3" json:"current_amount,omitempty"`
	InterestRate   float64                `protobuf:"fixed64,5,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	TermDays       int32                  `protobuf:"varint,6,opt,name=term_days,json=termDays,proto3" json:"term_days,omitempty"`
	AmountRepaid   float64                `protobuf:"fixed64,7,opt,name=amount_repaid,json=amountRepaid,proto3" json:"amount_repaid,omitempty"`
	DueDate        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	IsActive       bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Loan) Reset() {
	*x = Loan{}
	mi := &file_save_gamestate_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Loan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loan) ProtoMessage() {}

func (x *Loan) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loan.ProtoReflect.Descriptor instead.
func (*Loan) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{20}
}

func (x *Loan) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

func (x *Loan) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Loan) GetOriginalAmount() float64 {
	if x != nil {
		return x.OriginalAmount
	}
	return 0
}

func (x *Loan) GetCurrentAmount() float64 {
	if x != nil {
		return x.CurrentAmount
	}
	return 0
}

func (x *Loan) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *Loan) GetTermDays() int32 {
	if x != nil {
		return x.TermDays
	}
	return 0
}

func (x *Loan) GetAmountRepaid() float64 {
	if x != nil {
		return x.AmountRepaid
	}
	return 0
}

func (x *Loan) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Loan) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// Transaction represents a banking transaction
type Transaction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionId   string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	AccountId       string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TransactionType string                 `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Amount          float64                `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BalanceAfter    float64                `protobuf:"fixed64,5,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`
	Description     string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fee             float64                `protobuf:"fixed64,8,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_save_gamestate_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{21}
}

func (x *Transaction) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Transaction) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetBalanceAfter() float64 {
	if x != nil {
		return x.BalanceAfter
	}
	return 0
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Transaction) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// SummaryData contains daily and weekly summaries
type SummaryData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DailySummaries  []*DailySummary        `protobuf:"bytes,1,rep,name=daily_summaries,json=dailySummaries,proto3" json:"daily_summaries,omitempty"`
	WeeklySummaries []*WeeklySummary       `protobuf:"bytes,2,rep,name=weekly_summaries,json=weeklySummaries,proto3" json:"weekly_summaries,omitempty"`
	CurrentDay      *DailySummary          `protobuf:"bytes,3,opt,name=current_day,json=currentDay,proto3" json:"current_day,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SummaryData) Reset() {
	*x = SummaryData{}
	mi := &file_save_gamestate_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryData) ProtoMessage() {}

func (x *SummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryData.ProtoReflect.Descriptor instead.
func (*SummaryData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{22}
}

func (x *SummaryData) GetDailySummaries() []*DailySummary {
	if x != nil {
		return x.DailySummaries
	}
	return nil
}

func (x *SummaryData) GetWeeklySummaries() []*WeeklySummary {
	if x != nil {
		return x.WeeklySummaries
	}
	return nil
}

func (x *SummaryData) GetCurrentDay() *DailySummary {
	if x != nil {
		return x.CurrentDay
	}
	return nil
}

// DailySummary represents a day's summary
type DailySummary struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DayNumber          int32                  `protobuf:"varint,1,opt,name=day_number,json=dayNumber,proto3" json:"day_number,omitempty"`
	Season             string                 `protobuf:"bytes,2,opt,name=season,proto3" json:"season,omitempty"`
	StartingGold       float64                `protobuf:"fixed64,3,opt,name=starting_gold,json=startingGold,proto3" json:"starting_gold,omitempty"`
	EndingGold         float64                `protobuf:"fixed64,4,opt,name=ending_gold,json=endingGold,proto3" json:"ending_gold,omitempty"`
	Profit             float64                `protobuf:"fixed64,5,opt,name=profit,proto3" json:"profit,omitempty"`
	ProfitMargin       float64                `protobuf:"fixed64,6,opt,name=profit_margin,json=profitMargin,proto3" json:"profit_margin,omitempty"`
	ItemsBought        int32                  `protobuf:"varint,7,opt,name=items_bought,json=itemsBought,proto3" json:"items_bought,omitempty"`
	ItemsSold          int32                  `protobuf:"varint,8,opt,name=items_sold,json=itemsSold,proto3" json:"items_sold,omitempty"`
	CustomersServed    int32                  `protobuf:"varint,9,opt,name=customers_served,json=customersServed,proto3" json:"customers_served,omitempty"`
	ReputationChange   int32                  `protobuf:"varint,10,opt,name=reputation_change,json=reputationChange,proto3" json:"reputation_change,omitempty"`
	EventsOccurred     []string               `protobuf:"bytes,11,rep,name=events_occurred,json=eventsOccurred,proto3" json:"events_occurred,omitempty"`
	AchievementsEarned []string               `protobuf:"bytes,12,rep,name=achievements_earned,json=achievementsEarned,proto3" json:"achievements_earned,omitempty"`
	Date               *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DailySummary) Reset() {
	*x = DailySummary{}
	mi := &file_save_gamestate_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySummary) ProtoMessage() {}

func (x *DailySummary) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySummary.ProtoReflect.Descriptor instead.
func (*DailySummary) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{23}
}

func (x *DailySummary) GetDayNumber() int32 {
	if x != nil {
		return x.DayNumber
	}
	return 0
}

func (x *DailySummary) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *DailySummary) GetStartingGold() float64 {
	if x != nil {
		return x.StartingGold
	}
	return 0
}

func (x *DailySummary) GetEndingGold() float64 {
	if x != nil {
		return x.EndingGold
	}
	return 0
}

func (x *DailySummary) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *DailySummary) GetProfitMargin() float64 {
	if x != nil {
		return x.ProfitMargin
	}
	return 0
}

func (x *DailySummary) GetItemsBought() int32 {
	if x != nil {
		return x.ItemsBought
	}
	return 0
}

func (x *DailySummary) GetItemsSold() int32 {
	if x != nil {
		return x.ItemsSold
	}
	return 0
}

func (x *DailySummary) GetCustomersServed() int32 {
	if x != nil {
		return x.CustomersServed
	}
	return 0
}

func (x *DailySummary) GetReputationChange() int32 {
	if x != nil {
		return x.ReputationChange
	}
	return 0
}

func (x *DailySummary) GetEventsOccurred() []string {
	if x != nil {
		return x.EventsOccurred
	}
	return nil
}

func (x *DailySummary) GetAchievementsEarned() []string {
	if x != nil {
		return x.AchievementsEarned
	}
	return nil
}

func (x *DailySummary) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

// WeeklySummary represents a week's summary
type WeeklySummary struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	WeekNumber         int32                  `protobuf:"varint,1,opt,name=week_number,json=weekNumber,proto3" json:"week_number,omitempty"`
	TotalProfit        float64                `protobuf:"fixed64,2,opt,name=total_profit,json=totalProfit,proto3" json:"total_profit,omitempty"`
	AverageDailyProfit float64                `protobuf:"fixed64,3,opt,name=average_daily_profit,json=averageDailyProfit,proto3" json:"average_daily_profit,omitempty"`
	BestDayNumber      int32                  `protobuf:"varint,4,opt,name=best_day_number,json=bestDayNumber,proto3" json:"best_day_number,omitempty"`
	WorstDayNumber     int32                  `protobuf:"varint,5,opt,name=worst_day_number,json=worstDayNumber,proto3" json:"worst_day_number,omitempty"`
	StartDate          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WeeklySummary) Reset() {
	*x = WeeklySummary{}
	mi := &file_save_gamestate_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklySummary) ProtoMessage() {}

func (x *WeeklySummary) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklySummary.ProtoReflect.Descriptor instead.
func (*WeeklySummary) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{24}
}

func (x *WeeklySummary) GetWeekNumber() int32 {
	if x != nil {
		return x.WeekNumber
	}
	return 0
}

func (x *WeeklySummary) GetTotalProfit() float64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *WeeklySummary) GetAverageDailyProfit() float64 {
	if x != nil {
		return x.AverageDailyProfit
	}
	return 0
}

func (x *WeeklySummary) GetBestDayNumber() int32 {
	if x != nil {
		return x.BestDayNumber
	}
	return 0
}

func (x *WeeklySummary) GetWorstDayNumber() int32 {
	if x != nil {
		return x.WorstDayNumber
	}
	return 0
}

func (x *WeeklySummary) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *WeeklySummary) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// SettingsData contains game settings
type SettingsData struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	GameSpeed               float64                `protobuf:"fixed64,1,opt,name=game_speed,json=gameSpeed,proto3" json:"game_speed,omitempty"`
	AutoSave                bool                   `protobuf:"varint,2,opt,name=auto_save,json=autoSave,proto3" json:"auto_save,omitempty"`
	AutoSaveIntervalMinutes int32                  `protobuf:"varint,3,opt,name=auto_save_interval_minutes,json=autoSaveIntervalMinutes,proto3" json:"auto_save_interval_minutes,omitempty"`
	MusicVolume             float64                `protobuf:"fixed64,4,opt,name=music_volume,json=musicVolume,proto3" json:"music_volume,omitempty"`
	SfxVolume               float64                `protobuf:"fixed64,5,opt,name=sfx_volume,json=sfxVolume,proto3" json:"sfx_volume,omitempty"`
	Language                string                 `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	TutorialCompleted       bool                   `protobuf:"varint,7,opt,name=tutorial_completed,json=tutorialCompleted,proto3" json:"tutorial_completed,omitempty"`
	CustomSettings          map[string]string      `protobuf:"bytes,8,rep,name=custom_settings,json=customSettings,proto3" json:"custom_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SettingsData) Reset() {
	*x = SettingsData{}
	mi := &file_save_gamestate_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsData) ProtoMessage() {}

func (x *SettingsData) ProtoReflect() protoreflect.Message {
	mi := &file_save_gamestate_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsData.ProtoReflect.Descriptor instead.
func (*SettingsData) Descriptor() ([]byte, []int) {
	return file_save_gamestate_proto_rawDescGZIP(), []int{25}
}

func (x *SettingsData) GetGameSpeed() float64 {
	if x != nil {
		return x.GameSpeed
	}
	return 0
}

func (x *SettingsData) GetAutoSave() bool {
	if x != nil {
		return x.AutoSave
	}
	return false
}

func (x *SettingsData) GetAutoSaveIntervalMinutes() int32 {
	if x != nil {
		return x.AutoSaveIntervalMinutes
	}
	return 0
}

func (x *SettingsData) GetMusicVolume() float64 {
	if x != nil {
		return x.MusicVolume
	}
	return 0
}

func (x *SettingsData) GetSfxVolume() float64 {
	if x != nil {
		return x.SfxVolume
	}
	return 0
}

func (x *SettingsData) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SettingsData) GetTutorialCompleted() bool {
	if x != nil {
		return x.TutorialCompleted
	}
	return false
}

func (x *SettingsData) GetCustomSettings() map[string]string {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

var File_save_gamestate_proto protoreflect.FileDescriptor

const file_save_gamestate_proto_rawDesc = "" +
	"\n" +
	"\x14save/gamestate.proto\x12\x04save\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfe\x03\n" +
	"\tGameState\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x127\n" +
	"\tsave_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bsaveTime\x12(\n" +
	"\x06player\x18\x03 \x01(\v2\x10.save.PlayerDataR\x06player\x12(\n" +
	"\x06market\x18\x04 \x01(\v2\x10.save.MarketDataR\x06market\x121\n" +
	"\tinventory\x18\x05 \x01(\v2\x13.save.InventoryDataR\tinventory\x120\n" +
	"\tmerchants\x18\x06 \x03(\v2\x12.save.MerchantDataR\tmerchants\x12'\n" +
	"\x06events\x18\a \x01(\v2\x0f.save.EventDataR\x06events\x12.\n" +
	"\bprogress\x18\b \x01(\v2\x12.save.ProgressDataR\bprogress\x12+\n" +
	"\abanking\x18\t \x01(\v2\x11.save.BankingDataR\abanking\x12/\n" +
	"\tsummaries\x18\n" +
	" \x01(\v2\x11.save.SummaryDataR\tsummaries\x12.\n" +
	"\bsettings\x18\v \x01(\v2\x12.save.SettingsDataR\bsettings\"\xba\x03\n" +
	"\n" +
	"PlayerData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04gold\x18\x03 \x01(\x01R\x04gold\x12\x1e\n" +
	"\n" +
	"reputation\x18\x04 \x01(\x05R\n" +
	"reputation\x12\x12\n" +
	"\x04rank\x18\x05 \x01(\tR\x04rank\x12\x1e\n" +
	"\n" +
	"experience\x18\x06 \x01(\x05R\n" +
	"experience\x12\x1d\n" +
	"\n" +
	"day_number\x18\a \x01(\x05R\tdayNumber\x12%\n" +
	"\x0ecurrent_season\x18\b \x01(\tR\rcurrentSeason\x12\x12\n" +
	"\x04year\x18\t \x01(\x05R\x04year\x12#\n" +
	"\rshop_capacity\x18\n" +
	" \x01(\x05R\fshopCapacity\x12-\n" +
	"\x12warehouse_capacity\x18\v \x01(\x05R\x11warehouseCapacity\x12;\n" +
	"\vlast_played\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastPlayed\x125\n" +
	"\x17total_play_time_seconds\x18\r \x01(\x05R\x14totalPlayTimeSeconds\"\xf4\x03\n" +
	"\n" +
	"MarketData\x12'\n" +
	"\x06prices\x18\x01 \x03(\v2\x0f.save.ItemPriceR\x06prices\x12,\n" +
	"\ahistory\x18\x02 \x03(\v2\x12.save.PriceHistoryR\ahistory\x12#\n" +
	"\rcurrent_trend\x18\x03 \x01(\tR\fcurrentTrend\x12\x1e\n" +
	"\n" +
	"volatility\x18\x04 \x01(\x01R\n" +
	"volatility\x126\n" +
	"\ractive_events\x18\x05 \x03(\v2\x11.save.MarketEventR\factiveEvents\x12G\n" +
	"\rdemand_levels\x18\x06 \x03(\v2\".save.MarketData.DemandLevelsEntryR\fdemandLevels\x12G\n" +
	"\rsupply_levels\x18\a \x03(\v2\".save.MarketData.SupplyLevelsEntryR\fsupplyLevels\x1a?\n" +
	"\x11DemandLevelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a?\n" +
	"\x11SupplyLevelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x87\x02\n" +
	"\tItemPrice\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\x12\x1d\n" +
	"\n" +
	"base_price\x18\x03 \x01(\x01R\tbasePrice\x12#\n" +
	"\rcurrent_price\x18\x04 \x01(\x01R\fcurrentPrice\x12%\n" +
	"\x0eprevious_price\x18\x05 \x01(\x01R\rpreviousPrice\x12\x1a\n" +
	"\bcategory\x18\x06 \x01(\tR\bcategory\x12=\n" +
	"\flast_updated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"S\n" +
	"\fPriceHistory\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12*\n" +
	"\ahistory\x18\x02 \x03(\v2\x10.save.PricePointR\ahistory\"j\n" +
	"\n" +
	"PricePoint\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\x05R\x06volume\"\xf5\x01\n" +
	"\vMarketEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12%\n" +
	"\x0eprice_modifier\x18\x04 \x01(\x01R\rpriceModifier\x12#\n" +
	"\rduration_days\x18\x05 \x01(\x05R\fdurationDays\x12%\n" +
	"\x0edays_remaining\x18\x06 \x01(\x05R\rdaysRemaining\x12%\n" +
	"\x0eaffected_items\x18\a \x03(\tR\raffectedItems\"\xdf\x01\n" +
	"\rInventoryData\x122\n" +
	"\n" +
	"shop_items\x18\x01 \x03(\v2\x13.save.InventoryItemR\tshopItems\x12<\n" +
	"\x0fwarehouse_items\x18\x02 \x03(\v2\x13.save.InventoryItemR\x0ewarehouseItems\x12(\n" +
	"\x10total_shop_items\x18\x03 \x01(\x05R\x0etotalShopItems\x122\n" +
	"\x15total_warehouse_items\x18\x04 \x01(\x05R\x13totalWarehouseItems\"\x8d\x03\n" +
	"\rInventoryItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12%\n" +
	"\x0epurchase_price\x18\x05 \x01(\x01R\rpurchasePrice\x12#\n" +
	"\rcurrent_value\x18\x06 \x01(\x01R\fcurrentValue\x12\x1b\n" +
	"\tdays_held\x18\a \x01(\x05R\bdaysHeld\x12\x1e\n" +
	"\n" +
	"durability\x18\b \x01(\x05R\n" +
	"durability\x12%\n" +
	"\x0emax_durability\x18\t \x01(\x05R\rmaxDurability\x12\x1d\n" +
	"\n" +
	"is_spoiled\x18\n" +
	" \x01(\bR\tisSpoiled\x12?\n" +
	"\rpurchase_date\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\fpurchaseDate\"\xc5\x04\n" +
	"\fMerchantData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vpersonality\x18\x03 \x01(\tR\vpersonality\x12\x12\n" +
	"\x04gold\x18\x04 \x01(\x01R\x04gold\x12\x1e\n" +
	"\n" +
	"reputation\x18\x05 \x01(\x05R\n" +
	"reputation\x121\n" +
	"\tinventory\x18\x06 \x03(\v2\x13.save.InventoryItemR\tinventory\x12)\n" +
	"\x10trading_strategy\x18\a \x01(\tR\x0ftradingStrategy\x12%\n" +
	"\x0erisk_tolerance\x18\b \x01(\x01R\rriskTolerance\x12+\n" +
	"\x11successful_trades\x18\t \x01(\x05R\x10successfulTrades\x12!\n" +
	"\ftotal_trades\x18\n" +
	" \x01(\x05R\vtotalTrades\x12!\n" +
	"\ftotal_profit\x18\v \x01(\x01R\vtotalProfit\x12+\n" +
	"\x11known_information\x18\f \x03(\tR\x10knownInformation\x12R\n" +
	"\x10item_preferences\x18\r \x03(\v2'.save.MerchantData.ItemPreferencesEntryR\x0fitemPreferences\x1aB\n" +
	"\x14ItemPreferencesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xd9\x01\n" +
	"\tEventData\x12?\n" +
	"\x10scheduled_events\x18\x01 \x03(\v2\x14.save.ScheduledEventR\x0fscheduledEvents\x12?\n" +
	"\x10completed_events\x18\x02 \x03(\v2\x14.save.CompletedEventR\x0fcompletedEvents\x12\"\n" +
	"\rnext_event_id\x18\x03 \x01(\tR\vnextEventId\x12&\n" +
	"\x0fnext_event_days\x18\x04 \x01(\x05R\rnextEventDays\"\xf0\x01\n" +
	"\x0eScheduledEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x1f\n" +
	"\vtrigger_day\x18\x03 \x01(\x05R\n" +
	"triggerDay\x12D\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2$.save.ScheduledEvent.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xad\x01\n" +
	"\x0eCompletedEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12A\n" +
	"\x0ecompleted_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\rcompletedTime\x12%\n" +
	"\x0ewas_successful\x18\x03 \x01(\bR\rwasSuccessful\x12\x16\n" +
	"\x06impact\x18\x04 \x01(\x01R\x06impact\"\xf3\x02\n" +
	"\fProgressData\x125\n" +
	"\fachievements\x18\x01 \x03(\v2\x11.save.AchievementR\fachievements\x12B\n" +
	"\x11unlocked_features\x18\x02 \x03(\v2\x15.save.UnlockedFeatureR\x10unlockedFeatures\x12B\n" +
	"\n" +
	"statistics\x18\x03 \x03(\v2\".save.ProgressData.StatisticsEntryR\n" +
	"statistics\x12+\n" +
	"\x06quests\x18\x04 \x03(\v2\x13.save.QuestProgressR\x06quests\x128\n" +
	"\x18total_achievement_points\x18\x05 \x01(\x05R\x16totalAchievementPoints\x1a=\n" +
	"\x0fStatisticsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xe5\x01\n" +
	"\vAchievement\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06points\x18\x04 \x01(\x05R\x06points\x12;\n" +
	"\vearned_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"earnedTime\x12\x1a\n" +
	"\bprogress\x18\x06 \x01(\x01R\bprogress\x12\x1f\n" +
	"\vis_complete\x18\a \x01(\bR\n" +
	"isComplete\"\xb5\x01\n" +
	"\x0fUnlockedFeature\x12\x1d\n" +
	"\n" +
	"feature_id\x18\x01 \x01(\tR\tfeatureId\x12!\n" +
	"\ffeature_name\x18\x02 \x01(\tR\vfeatureName\x12;\n" +
	"\vunlock_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"unlockTime\x12#\n" +
	"\runlock_reason\x18\x04 \x01(\tR\funlockReason\"\xaf\x02\n" +
	"\rQuestProgress\x12\x19\n" +
	"\bquest_id\x18\x01 \x01(\tR\aquestId\x12\x1d\n" +
	"\n" +
	"quest_name\x18\x02 \x01(\tR\tquestName\x12!\n" +
	"\fcurrent_step\x18\x03 \x01(\x05R\vcurrentStep\x12\x1f\n" +
	"\vtotal_steps\x18\x04 \x01(\x05R\n" +
	"totalSteps\x12A\n" +
	"\n" +
	"quest_data\x18\x05 \x03(\v2\".save.QuestProgress.QuestDataEntryR\tquestData\x12\x1f\n" +
	"\vis_complete\x18\x06 \x01(\bR\n" +
	"isComplete\x1a<\n" +
	"\x0eQuestDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa5\x02\n" +
	"\vBankingData\x12-\n" +
	"\baccounts\x18\x01 \x03(\v2\x11.save.BankAccountR\baccounts\x122\n" +
	"\vinvestments\x18\x02 \x03(\v2\x10.save.InvestmentR\vinvestments\x12 \n" +
	"\x05loans\x18\x03 \x03(\v2\n" +
	".save.LoanR\x05loans\x125\n" +
	"\ftransactions\x18\x04 \x03(\v2\x11.save.TransactionR\ftransactions\x122\n" +
	"\x15total_interest_earned\x18\x05 \x01(\x01R\x13totalInterestEarned\x12&\n" +
	"\x0ftotal_fees_paid\x18\x06 \x01(\x01R\rtotalFeesPaid\"\xb2\x02\n" +
	"\vBankAccount\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12!\n" +
	"\faccount_type\x18\x02 \x01(\tR\vaccountType\x12\x18\n" +
	"\abalance\x18\x03 \x01(\x01R\abalance\x12#\n" +
	"\rinterest_rate\x18\x04 \x01(\x01R\finterestRate\x12;\n" +
	"\vopened_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"openedDate\x12H\n" +
	"\x12last_interest_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastInterestDate\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\"\xe9\x02\n" +
	"\n" +
	"Investment\x12#\n" +
	"\rinvestment_id\x18\x01 \x01(\tR\finvestmentId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x1b\n" +
	"\toption_id\x18\x03 \x01(\tR\boptionId\x12\x1c\n" +
	"\tprincipal\x18\x04 \x01(\x01R\tprincipal\x12#\n" +
	"\rcurrent_value\x18\x05 \x01(\x01R\fcurrentValue\x129\n" +
	"\n" +
	"start_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x12?\n" +
	"\rmaturity_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fmaturityDate\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12#\n" +
	"\ractual_return\x18\t \x01(\x01R\factualReturn\"\xc9\x02\n" +
	"\x04Loan\x12\x17\n" +
	"\aloan_id\x18\x01 \x01(\tR\x06loanId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12'\n" +
	"\x0foriginal_amount\x18\x03 \x01(\x01R\x0eoriginalAmount\x12%\n" +
	"\x0ecurrent_amount\x18\x04 \x01(\x01R\rcurrentAmount\x12#\n" +
	"\rinterest_rate\x18\x05 \x01(\x01R\finterestRate\x12\x1b\n" +
	"\tterm_days\x18\x06 \x01(\x05R\btermDays\x12#\n" +
	"\ramount_repaid\x18\a \x01(\x01R\famountRepaid\x125\n" +
	"\bdue_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\"\xa9\x02\n" +
	"\vTransaction\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x12#\n" +
	"\rbalance_after\x18\x05 \x01(\x01R\fbalanceAfter\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x10\n" +
	"\x03fee\x18\b \x01(\x01R\x03fee\"\xbf\x01\n" +
	"\vSummaryData\x12;\n" +
	"\x0fdaily_summaries\x18\x01 \x03(\v2\x12.save.DailySummaryR\x0edailySummaries\x12>\n" +
	"\x10weekly_summaries\x18\x02 \x03(\v2\x13.save.WeeklySummaryR\x0fweeklySummaries\x123\n" +
	"\vcurrent_day\x18\x03 \x01(\v2\x12.save.DailySummaryR\n" +
	"currentDay\"\xec\x03\n" +
	"\fDailySummary\x12\x1d\n" +
	"\n" +
	"day_number\x18\x01 \x01(\x05R\tdayNumber\x12\x16\n" +
	"\x06season\x18\x02 \x01(\tR\x06season\x12#\n" +
	"\rstarting_gold\x18\x03 \x01(\x01R\fstartingGold\x12\x1f\n" +
	"\vending_gold\x18\x04 \x01(\x01R\n" +
	"endingGold\x12\x16\n" +
	"\x06profit\x18\x05 \x01(\x01R\x06profit\x12#\n" +
	"\rprofit_margin\x18\x06 \x01(\x01R\fprofitMargin\x12!\n" +
	"\fitems_bought\x18\a \x01(\x05R\vitemsBought\x12\x1d\n" +
	"\n" +
	"items_sold\x18\b \x01(\x05R\titemsSold\x12)\n" +
	"\x10customers_served\x18\t \x01(\x05R\x0fcustomersServed\x12+\n" +
	"\x11reputation_change\x18\n" +
	" \x01(\x05R\x10reputationChange\x12'\n" +
	"\x0fevents_occurred\x18\v \x03(\tR\x0eeventsOccurred\x12/\n" +
	"\x13achievements_earned\x18\f \x03(\tR\x12achievementsEarned\x12.\n" +
	"\x04date\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"\xc9\x02\n" +
	"\rWeeklySummary\x12\x1f\n" +
	"\vweek_number\x18\x01 \x01(\x05R\n" +
	"weekNumber\x12!\n" +
	"\ftotal_profit\x18\x02 \x01(\x01R\vtotalProfit\x120\n" +
	"\x14average_daily_profit\x18\x03 \x01(\x01R\x12averageDailyProfit\x12&\n" +
	"\x0fbest_day_number\x18\x04 \x01(\x05R\rbestDayNumber\x12(\n" +
	"\x10worst_day_number\x18\x05 \x01(\x05R\x0eworstDayNumber\x129\n" +
	"\n" +
	"start_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"\xa8\x03\n" +
	"\fSettingsData\x12\x1d\n" +
	"\n" +
	"game_speed\x18\x01 \x01(\x01R\tgameSpeed\x12\x1b\n" +
	"\tauto_save\x18\x02 \x01(\bR\bautoSave\x12;\n" +
	"\x1aauto_save_interval_minutes\x18\x03 \x01(\x05R\x17autoSaveIntervalMinutes\x12!\n" +
	"\fmusic_volume\x18\x04 \x01(\x01R\vmusicVolume\x12\x1d\n" +
	"\n" +
	"sfx_volume\x18\x05 \x01(\x01R\tsfxVolume\x12\x1a\n" +
	"\blanguage\x18\x06 \x01(\tR\blanguage\x12-\n" +
	"\x12tutorial_completed\x18\a \x01(\bR\x11tutorialCompleted\x12O\n" +
	"\x0fcustom_settings\x18\b \x03(\v2&.save.SettingsData.CustomSettingsEntryR\x0ecustomSettings\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B?Z=github.com/yourusername/merchant-tails/game/internal/gen/saveb\x06proto3"

var (
	file_save_gamestate_proto_rawDescOnce sync.Once
	file_save_gamestate_proto_rawDescData []byte
)

func file_save_gamestate_proto_rawDescGZIP() []byte {
	file_save_gamestate_proto_rawDescOnce.Do(func() {
		file_save_gamestate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_save_gamestate_proto_rawDesc), len(file_save_gamestate_proto_rawDesc)))
	})
	return file_save_gamestate_proto_rawDescData
}

var file_save_gamestate_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_save_gamestate_proto_goTypes = []any{
	(*GameState)(nil),             // 0: save.GameState
	(*PlayerData)(nil),            // 1: save.PlayerData
	(*MarketData)(nil),            // 2: save.MarketData
	(*ItemPrice)(nil),             // 3: save.ItemPrice
	(*PriceHistory)(nil),          // 4: save.PriceHistory
	(*PricePoint)(nil),            // 5: save.PricePoint
	(*MarketEvent)(nil),           // 6: save.MarketEvent
	(*InventoryData)(nil),         // 7: save.InventoryData
	(*InventoryItem)(nil),         // 8: save.InventoryItem
	(*MerchantData)(nil),          // 9: save.MerchantData
	(*EventData)(nil),             // 10: save.EventData
	(*ScheduledEvent)(nil),        // 11: save.ScheduledEvent
	(*CompletedEvent)(nil),        // 12: save.CompletedEvent
	(*ProgressData)(nil),          // 13: save.ProgressData
	(*Achievement)(nil),           // 14: save.Achievement
	(*UnlockedFeature)(nil),       // 15: save.UnlockedFeature
	(*QuestProgress)(nil),         // 16: save.QuestProgress
	(*BankingData)(nil),           // 17: save.BankingData
	(*BankAccount)(nil),           // 18: save.BankAccount
	(*Investment)(nil),            // 19: save.Investment
	(*Loan)(nil),                  // 20: save.Loan
	(*Transaction)(nil),           // 21: save.Transaction
	(*SummaryData)(nil),           // 22: save.SummaryData
	(*DailySummary)(nil),          // 23: save.DailySummary
	(*WeeklySummary)(nil),         // 24: save.WeeklySummary
	(*SettingsData)(nil),          // 25: save.SettingsData
	nil,                           // 26: save.MarketData.DemandLevelsEntry
	nil,                           // 27: save.MarketData.SupplyLevelsEntry
	nil,                           // 28: save.MerchantData.ItemPreferencesEntry
	nil,                           // 29: save.ScheduledEvent.ParametersEntry
	nil,                           // 30: save.ProgressData.StatisticsEntry
	nil,                           // 31: save.QuestProgress.QuestDataEntry
	nil,                           // 32: save.SettingsData.CustomSettingsEntry
	(*timestamppb.Timestamp)(nil), // 33: google.protobuf.Timestamp
}
var file_save_gamestate_proto_depIdxs = []int32{
	33, // 0: save.GameState.save_time:type_name -> google.protobuf.Timestamp
	1,  // 1: save.GameState.player:type_name -> save.PlayerData
	2,  // 2: save.GameState.market:type_name -> save.MarketData
	7,  // 3: save.GameState.inventory:type_name -> save.InventoryData
	9,  // 4: save.GameState.merchants:type_name -> save.MerchantData
	10, // 5: save.GameState.events:type_name -> save.EventData
	13, // 6: save.GameState.progress:type_name -> save.ProgressData
	17, // 7: save.GameState.banking:type_name -> save.BankingData
	22, // 8: save.GameState.summaries:type_name -> save.SummaryData
	25, // 9: save.GameState.settings:type_name -> save.SettingsData
	33, // 10: save.PlayerData.last_played:type_name -> google.protobuf.Timestamp
	3,  // 11: save.MarketData.prices:type_name -> save.ItemPrice
	4,  // 12: save.MarketData.history:type_name -> save.PriceHistory
	6,  // 13: save.MarketData.active_events:type_name -> save.MarketEvent
	26, // 14: save.MarketData.demand_levels:type_name -> save.MarketData.DemandLevelsEntry
	27, // 15: save.MarketData.supply_levels:type_name -> save.MarketData.SupplyLevelsEntry
	33, // 16: save.ItemPrice.last_updated:type_name -> google.protobuf.Timestamp
	5,  // 17: save.PriceHistory.history:type_name -> save.PricePoint
	33, // 18: save.PricePoint.time:type_name -> google.protobuf.Timestamp
	8,  // 19: save.InventoryData.shop_items:type_name -> save.InventoryItem
	8,  // 20: save.InventoryData.warehouse_items:type_name -> save.InventoryItem
	33, // 21: save.InventoryItem.purchase_date:type_name -> google.protobuf.Timestamp
	8,  // 22: save.MerchantData.inventory:type_name -> save.InventoryItem
	28, // 23: save.MerchantData.item_preferences:type_name -> save.MerchantData.ItemPreferencesEntry
	11, // 24: save.EventData.scheduled_events:type_name -> save.ScheduledEvent
	12, // 25: save.EventData.completed_events:type_name -> save.CompletedEvent
	29, // 26: save.ScheduledEvent.parameters:type_name -> save.ScheduledEvent.ParametersEntry
	33, // 27: save.CompletedEvent.completed_time:type_name -> google.protobuf.Timestamp
	14, // 28: save.ProgressData.achievements:type_name -> save.Achievement
	15, // 29: save.ProgressData.unlocked_features:type_name -> save.UnlockedFeature
	30, // 30: save.ProgressData.statistics:type_name -> save.ProgressData.StatisticsEntry
	16, // 31: save.ProgressData.quests:type_name -> save.QuestProgress
	33, // 32: save.Achievement.earned_time:type_name -> google.protobuf.Timestamp
	33, // 33: save.UnlockedFeature.unlock_time:type_name -> google.protobuf.Timestamp
	31, // 34: save.QuestProgress.quest_data:type_name -> save.QuestProgress.QuestDataEntry
	18, // 35: save.BankingData.accounts:type_name -> save.BankAccount
	19, // 36: save.BankingData.investments:type_name -> save.Investment
	20, // 37: save.BankingData.loans:type_name -> save.Loan
	21, // 38: save.BankingData.transactions:type_name -> save.Transaction
	33, // 39: save.BankAccount.opened_date:type_name -> google.protobuf.Timestamp
	33, // 40: save.BankAccount.last_interest_date:type_name -> google.protobuf.Timestamp
	33, // 41: save.Investment.start_date:type_name -> google.protobuf.Timestamp
	33, // 42: save.Investment.maturity_date:type_name -> google.protobuf.Timestamp
	33, // 43: save.Loan.due_date:type_name -> google.protobuf.Timestamp
	33, // 44: save.Transaction.timestamp:type_name -> google.protobuf.Timestamp
	23, // 45: save.SummaryData.daily_summaries:type_name -> save.DailySummary
	24, // 46: save.SummaryData.weekly_summaries:type_name -> save.WeeklySummary
	23, // 47: save.SummaryData.current_day:type_name -> save.DailySummary
	33, // 48: save.DailySummary.date:type_name -> google.protobuf.Timestamp
	33, // 49: save.WeeklySummary.start_date:type_name -> google.protobuf.Timestamp
	33, // 50: save.WeeklySummary.end_date:type_name -> google.protobuf.Timestamp
	32, // 51: save.SettingsData.custom_settings:type_name -> save.SettingsData.CustomSettingsEntry
	52, // [52:52] is the sub-list for method output_type
	52, // [52:52] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_save_gamestate_proto_init() }
func file_save_gamestate_proto_init() {
	if File_save_gamestate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_save_gamestate_proto_rawDesc), len(file_save_gamestate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_save_gamestate_proto_goTypes,
		DependencyIndexes: file_save_gamestate_proto_depIdxs,
		MessageInfos:      file_save_gamestate_proto_msgTypes,
	}.Build()
	File_save_gamestate_proto = out.File
	file_save_gamestate_proto_goTypes = nil
	file_save_gamestate_proto_depIdxs = nil
}
