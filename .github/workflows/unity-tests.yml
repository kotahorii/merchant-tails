name: Unity Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        unityVersion:
          - 2022.3.10f1  # Unity 2022.3 LTS version
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.unityVersion }}-
            Library-
            
      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          testMode: PlayMode
          artifactsPath: test-results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Unity Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+MerchantTails.Core'
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results
          path: test-results
          
      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: CodeCoverage
          
      # Publish test results to GitHub
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: 'test-results/**/*.xml'
          check_name: Unity Test Report
          fail_on_failure: true
          
      # Comment PR with coverage
      - name: Comment PR with Coverage
        uses: 5monkeys/cobertura-action@v13
        if: github.event_name == 'pull_request' && always()
        with:
          path: CodeCoverage/**/*.xml
          minimum_coverage: 75
          fail_below_threshold: false
          show_line: true
          show_branch: true
          show_class_names: true